@using Checkers.Models.Checker
@using Checkers.Models.ViewModels
@model RequestViewModel
@{
    List<Checker> P1Checkers = new List<Checker>();
    List<Checker> P2Checkers = new List<Checker>();

    for (int i = 0; i < 3; i++)
    {
        for (int j = (i + 1) % 2; j < 8; j+= 2)
        {
            P2Checkers.Add(new Checker
            {
                Player = Player.P2,
                Color = "black",
                Column = j,
                Row = i,
                Direction = CheckerDirection.Down,
            });
        }
    }

    for (int i = 5; i < 8; i++)
    {
        for (int j = (i + 1) % 2; j < 8; j += 2)
        {
            P1Checkers.Add(new Checker
            {
                Player = Player.P1,
                Color = "white",
                Column = j,
                Row = i,
                Direction = CheckerDirection.Up,
            });
        }   
    }

    Checker activeChecker = null;
}

<video autoplay muted loop id="myVideo">
    <source src="/assets/videos/background.mp4" type="video/mp4">
</video>

<div>
    <partial name="_VictoryModal"></partial>
    <partial name="_DefeatModal"></partial>
    <partial name="_AbandonedGameModal"></partial>
    <div class="row">
        <div class="col-md-9 checker-board-col">
            <div id="signalRMethod" data-method="@Model.Method" class="hidden"></div>
            <div id="signalRP1Name" data-p1Name="@Model.P1Name" class="hidden"></div>
            <div id="signalRP2Name" data-p2Name="@Model.P2Name" class="hidden"></div>
            <div id="signalRGameId" data-gameId="@Model.GameId" class="hidden"></div>

            <div class="checker-board">
                <div class="board">
                    @for (int i = 0; i < 8; i++)
                    {
                        <div class="row checker-board-row">
                            @for (int j = 0; j < 8; j++)
                            {
                                var checker = P2Checkers.FirstOrDefault(c => c.Column == j && c.Row == i);
                                if (checker == null)
                                {
                                    checker = P1Checkers.FirstOrDefault(c => c.Column == j && c.Row == i);
                                }
                                <div class="cell" data-row="@i" data-column="@j">
                                    @if (checker != null)
                                    {
                                        <div class="checker @checker.Color @(checker == activeChecker ? "active" : "")"
                                             data-row="@checker.Row"
                                             data-column="@checker.Column"
                                             data-direction="@checker.Direction"
                                             data-player="@checker.Player"></div>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="timer">YOUR TURN: <br />  0:00</div>
        <div class="col-md-3 chat-col">
            <h2>Chat for room @Model.GameId</h2>
            <div class="row chat-row">
                <div id="p1Name" class="col-md-4 player-name-col">
                    P1: @Model.P1Name
                </div>
                <div id="p2Name" class="col-md-4 player-name-col">
                    P2: @Model.P2Name
                </div>
            </div>
            <div id="chat" class="chat">
            </div>
            <div>
                <input id="chatInput" type="text" placeholder="Enter message" />
                <button id="chatBtn" type="button">Send</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/gameHub.js"></script>